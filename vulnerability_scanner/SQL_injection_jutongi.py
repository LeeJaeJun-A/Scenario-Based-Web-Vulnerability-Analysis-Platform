import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))

from backend.database import SessionLocal
from backend.models import VulType, Payloads
from vulnerability_scanner.TEST.getParameters import fetch_site_info
import requests
from fake_useragent import UserAgent


def SQL_injection_jutongi():
    # backend/analysis.py 확인해보면 폴더명이랑 같은 함수를 가정하고 작동하기에 이에 맞추어 통일 부탁해요
    pass


# Database query function to get payloads
def get_sql_injection_payloads(db):
    return db.query(Payloads).filter_by(vul_type=VulType.SQL_INJECTION).all()

# requests with SQL injection payloads
def send_sql_injection_requests(db, url, get_parameters, post_parameters, headers, cookies, session):
    payloads = get_sql_injection_payloads(db)

    for payload in payloads:
        payload_value = payload.payload  # Correct attribute name

        # Convert ImmutableMultiDict to regular dict if needed
        if isinstance(post_parameters, requests.structures.CaseInsensitiveDict):
            post_data = post_parameters.copy().to_dict(flat=False)  # Convert ImmutableMultiDict to regular dict
        else:
            post_data = post_parameters.copy()

        # Update post_data with payload_value
        for param in post_data.keys():
            post_data[param] = payload_value

        # Debugging output to verify the POST data being sent
        print(f"Sending POST request to {url} with data: {post_data}")

        # Send POST request
        post_response = session.post(url, headers=headers, cookies=cookies, data=post_data)
        print(f"Sent payload (POST): {payload_value}")
        print(f"Response status code (POST): {post_response.status_code}")
        print(f"Response text (POST): {post_response.text}")  # Print only the first 200 characters for brevity

        if payload_value in post_response.text:
            print(f"Payload found in response (POST): {payload_value}")

if __name__ == "__main__":
    db = SessionLocal()
    site_url = "http://127.0.0.1:1399/"
    site_info = fetch_site_info(site_url)
    if site_info:
        print(site_info)
    url = site_info['url']
    get_parameters = site_info['get_parameters']
    post_parameters = site_info['post_parameters']
    headers = {
        "User-Agent": UserAgent().random
    }
    cookies = site_info['cookies']

    session = requests.Session()

    send_sql_injection_requests(db, url, get_parameters, post_parameters, headers, cookies, session)

    db.close()
